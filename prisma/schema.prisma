generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  image     String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Market {
  id             String   @id
  name           String
  chineseName    String
  location       String
  latitude       Float
  longitude      Float
  established    String
  researchFocus  String
  description    String   @db.Text
  analyticalNote String   @db.Text
  keyFindings    String[]
  image          String
  isActive       Boolean  @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  vendors MarketVendor[]

  @@map("markets")
}

model Vendor {
  id                   String   @id @default(cuid())
  name                 String
  chineseName          String?
  description          String   @db.Text
  specialties          String[]
  latitude             Float?
  longitude            Float?
  images               String[]
  contactPhone         String?
  contactInstagram     String?
  contactFacebook      String?
  contactLine          String?
  operatingHours       String?
  researchNotes        String?  @db.Text
  culturalSignificance String?  @db.Text
  isActive             Boolean  @default(true)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  // Relations
  markets MarketVendor[]

  @@map("vendors")
}

model MarketVendor {
  id       String @id @default(cuid())
  marketId String
  vendorId String
  
  market Market @relation(fields: [marketId], references: [id], onDelete: Cascade)
  vendor Vendor @relation(fields: [vendorId], references: [id], onDelete: Cascade)
  
  @@unique([marketId, vendorId])
  @@map("market_vendors")
}

enum Role {
  USER
  ADMIN
}
